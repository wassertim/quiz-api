openapi: '3.0.1'
info:
  title: Quiz
  version: '1.0'
  description: Small Quiz Api
servers:
  - url: http://localhost:5050
    description: local
paths:
  /users/register:
    post:
      summary: "Register a user"
      tags:
        - Registration and Authentication
      operationId: createAccount
      description: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        400:
          description: User validation failed
          content:
            text/plain:
              schema:
                type: string
        201:
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/login: #migh not be needed
    post:
      tags:
        - Registration and Authentication
      operationId: login
      description: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: User logged in sucessfully
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Token"
  /quiz-attempts/statistics:
    get:
      tags:
        - Quiz Attempts
      operationId: getQuizAttemptsStatistics
      description: Get statistics on quiz attempts
      security:
        - basicAuth: []
      responses:
        200:
          description: "Basic stats on quiz attempts/completion/scores/etc..."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QuizStatistics"
  /quiz-attempts/submit/{quizId}:
    post:
      tags:
        - Quiz Attempts
      operationId: submitQuizAttempt
      description: Submit a completed quiz
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuizSubmission"
      responses:
        200:
          description: Quiz submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuizSubmissionResult"
  /quizzes/{quizId}:
    put:
      tags:
        - Quiz Templates
      operationId: editQuiz
      description: Edit a quiz
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            $ref: "#/components/schemas/UUID"
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quiz"
      responses:
        401:
          $ref: "#/components/responses/UnauthorizedError"
        200:
          description: Quiz updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz"
  /quizzes:
    post:
      tags:
        - Quiz Templates
      operationId: createQuiz
      description: Create a quiz
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quiz"
      responses:
        400:
          description: Quiz does not have all the required properties
          content:
            text/plain:
              schema:
                type: string
        401:
          $ref: "#/components/responses/UnauthorizedError"
        201:
          description: Quiz created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quiz"  
components:
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    QuizStatistics:
      type: object
      properties:
        quizId:
          $ref: "#/components/schemas/UUID"
        attempts:
          type: array
          items:
            $ref: "#/components/schemas/QuizSubmissionResult"
    QuestionAndAnswers:
      type: object
      properties:
        questionId:
          $ref: "#/components/schemas/UUID"
        answers:
          type: array
          items:
            $ref: "#/components/schemas/UUID"
    QuizSubmission:
      type: object
      properties:
        quizId:
          $ref: "#/components/schemas/UUID"
        questionsAndAnswers:
          type: array
          items:
            $ref: "#/components/schemas/QuestionAndAnswers"
    QuestionResult:
      type: object
      properties:
        questionId:
          $ref: "#/components/schemas/UUID"
        score:
          nullable: false
          type: integer
          example: 5
        selectedAnswerIds:
          nullable: false
          type: array
          items:
            $ref: "#/components/schemas/UUID"
    QuizSubmissionResult:
      type: object
      properties:
        quizId:
          $ref: "#/components/schemas/UUID"
        questionResults:
          type: array
          items:
            $ref: "#/components/schemas/QuestionResult"
    UUID:
      type: string
      example: 5197EE1E-ACF4-4DDC-89EE-467A60CF1DCA
    Answer:
      type: object
      properties:
        text:
          nullable: false
          type: string
          example: "42"
          minLength: 1
        isCorrect:
          nullable: false
          type: boolean
          example: true
    Question:
      type: object
      properties:
        questionText:
          nullable: false
          type: string
          minLength: 1
          example: what is the answer to life the universe and everything
        questionScore:
          nullable: false
          type: integer
          example: 5
        answers:
          nullable: false
          type: array
          minItems: 2
          items:
            $ref: "#/components/schemas/Answer"
    Quiz:
      type: object
      properties:
        questions:
          nullable: false
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Question"
    Token:
      type: string
      example: Basic ZGVtbzpwQDU1dzByZA==
    User:
      type: object
      properties:
        login:
          type: string
          nullable: false
          example: laura
        password:
          type: string
          nullable: false
          example: mypassword

